{"version":3,"sources":["components/HoudiniHome/index.js","use/usePropertyValueApi/usePropertyValue.js","use/usePropertyValueApi/index.js","use/usePaintingApi/ripper/index.js","use/usePaintingApi/mask/index.js","use/usePaintingApi/index.js","use/useLayoutApi/index.js","App.js","gainStyle/getPageStyle.js","postCss/randomKeywordPlugin.js","replaceStyle/replacePageStyles.js","index.js","gainStyle/ss.js"],"names":["window","CSS","registerProperty","name","syntax","inherits","initialValue","Math","random","className","onClick","value","document","querySelector","style","setProperty","paintWorklet","addModule","process","Ripper","x","y","button","top","getBoundingClientRect","start","performance","now","addEventListener","evt","classList","add","clientX","clientY","requestAnimationFrame","raf","count","floor","cssText","remove","listen","React","Component","useState","showRipper","toggleRipper","showMask","toggleMask","layoutWorklet","body","innerHTML","texts","map","text","idx","key","defaultHistory","createHashHistory","App","history","to","exact","path","component","getPageStyles","styleElements","querySelectorAll","Promise","all","el","href","fetch","then","response","stylesArray","join","randomKeywordPlugin","postcss","plugin","css","walkRules","rule","walkDecls","decl","i","includes","replace","replacePageStyles","existingStyles","polyfillStyles","createElement","head","appendChild","forEach","parentElement","removeChild","ReactDOM","render","StrictMode","getElementById","styleSheets","stylesheet","console","log","rules","reduce","prev","next","concat","cssRules","Object","keys","property","ss","parse","ast","result"],"mappings":"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","file":"static/js/main.55c8ce25.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\n\nfunction registerProperty(){\n  window.CSS.registerProperty({\n    name: '--my-len',\n    syntax: '<number>',\n    inherits: false,\n    initialValue: Math.random(),\n  });\n  window.CSS.registerProperty({\n    name: '--my-saturation',\n    syntax: '<number>',\n    inherits: false,\n    initialValue: Math.random(),\n  });\n}\nregisterProperty()\n\nfunction setProp(value) {\n  document.querySelector('.home').style.setProperty('--my-len', value);\n  document.querySelector('.home').style.setProperty('--my-saturation', value);\n  // console.log(document.querySelector('.home').classList)\n}\n\nexport default function(){\n  return <div>\n    <h2 className=\"home\">点亮我</h2>\n    <span onClick={() => setProp(Math.random())}>click me</span>\n  </div>\n}","export default function (){\n  window.CSS.registerProperty({\n    name: '--registered',\n    syntax: '<color>',\n    inherits: false,\n    initialValue: 'red',\n  });\n  // window.CSS.registerProperty({\n  //   name: '--unregistered',\n  //   syntax: '<color>',\n  //   inherits: false,\n  //   initialValue: 'red',\n  // });\n}","import React from 'react'\nimport registerProperty from './usePropertyValue';\nimport './index.css'\n\nregisterProperty()\n\nexport default function(){\n  return <div>\n    <button className=\"registered\">Background Registered</button>\n    <button className=\"unregistered\">Background Not Registered</button>\n  </div>\n}\n","import React from 'react'\nimport './index.css'\n\nfunction registerWorklet() {\n  if (\"paintWorklet\" in CSS) {\n    CSS.paintWorklet.addModule(`${process.env.PUBLIC_URL}/paintWorklet/ripple.js`);\n  }\n}\n\nfunction listen() {\n\n  const button = document.querySelector(\".ripple\");\n  const top = button.getBoundingClientRect().top;\n  let start = performance.now();\n  let x, y;\n\n  document.querySelector(\".ripple\").addEventListener(\"click\", (evt) => {\n    button.classList.add(\"animating\");\n    [x, y] = [evt.clientX, evt.clientY - top];\n    start = performance.now();\n    requestAnimationFrame(function raf(now) {\n      const count = Math.floor(now - start);\n      button.style.cssText = `--ripple-x: ${x}; --ripple-y: ${y}; --animation-tick: ${count};`;\n      if (count > 1000) {\n        button.classList.remove(\"animating\");\n        button.style.cssText = `--animation-tick: 0`;\n        return;\n      }\n      requestAnimationFrame(raf);\n    });\n  });\n}\n\nfunction start(){\n  registerWorklet()\n}\nstart()\n\nexport default class Ripper extends React.Component {\n  componentDidMount() {\n    listen();\n  }\n\n  render() {\n    return (<button className=\"ripple\">click me</button>)\n  }\n}\n","import React from 'react'\nimport './index.css'\n\nfunction registerWorklet() {\n  if (\"paintWorklet\" in CSS) {\n    CSS.paintWorklet.addModule(`${process.env.PUBLIC_URL}/paintWorklet/mask.js`);\n  }\n}\n\nregisterWorklet()\n\nexport default function(){\n  return (<div className=\"mask\">mask-image</div>)\n}\n","\nimport React, { useState } from 'react'\nimport Ripper from './ripper'\nimport Mask from './mask'\nimport './index.css'\n\nfunction registerWorklet() {\n  if (\"paintWorklet\" in CSS) {\n    // 可使用本地文件地址，也可使用线上文件\n    CSS.paintWorklet.addModule(`${process.env.PUBLIC_URL}/paintWorklet/headerHighlight.js`);\n  }\n}\n\nregisterWorklet()\n\nexport default function(){\n  const [showRipper, toggleRipper] = useState(false)\n  const [showMask, toggleMask] = useState(false)\n  return <div>\n    <h1 className=\"fancy\">My Cool Header</h1>\n    <div>\n      <span onClick={() => toggleRipper(!showRipper)}>clickMe Ripper</span>\n      <span onClick={() => toggleMask(!showMask)}>clickMe Mask</span>\n    </div>\n    {showRipper && <Ripper></Ripper>}\n    {showMask && <Mask></Mask>}\n  </div>\n}\n","\nimport React from 'react'\nimport './index.css'\n\nfunction registerWorklet() {\n  if ('layoutWorklet' in CSS) {\n    CSS.layoutWorklet.addModule(`${process.env.PUBLIC_URL}/layoutWorklet/masonry.js`);\n  } else {\n    document.body.innerHTML = 'You need support for <a href=\"https://drafts.css-houdini.org/css-layout-api/\">CSS Layout API</a> to view this demo :(';\n  }\n}\n\nregisterWorklet()\n\nconst texts = [\n  '1 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret. Lorem ipsum dolor sit a',\n  '2 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum',\n  '3 Lorem ipsum dolor si',\n  '4 Lorem ipsum dolor sit amet, consul disputando ne his',\n  '5 Lorem ipsum',\n  '6 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. I',\n  '7  Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis defin',\n  '8 Lorem ipsum dolor sit amet, consul dis',\n  '9 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruis',\n]\n\n\nexport default function(){\n  return <div className='masonry'>\n    {\n      texts.map((text, idx) => <div key={idx} className='text'>{text}</div>)\n    }\n  </div>\n}\n","import React from 'react';\nimport {Link, Switch, Route, HashRouter as Router} from 'react-router-dom'\nimport { createHashHistory } from 'history';\nimport './App.css';\n\nimport HoudiniHome from './components/HoudiniHome'\nimport PropertyValue from './use/usePropertyValueApi'\nimport PaintApi from './use/usePaintingApi'\nimport LayoutApi from './use/useLayoutApi'\n\nconst defaultHistory = createHashHistory();\n\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router history={defaultHistory}>\n        <ul>\n          <li>Properties and values</li>\n          <ul>\n            <li><div><Link to={`/`}>home</Link></div></li>\n            <li><div><Link to={`/useHoudini`}>useHoudini</Link></div></li>\n            <li><div><Link to={`/propertyValye`}>propertyValye</Link></div></li>\n          </ul>\n          <li>paint worklet</li>\n          <ul>\n            <li><div><Link to={`/paint`}>paint</Link></div></li>\n          </ul>\n          <li>layout worklet</li>\n          <ul>\n            <li><div><Link to={`/layout`}>layout</Link></div></li>\n          </ul>\n        </ul>\n        <Switch>\n          <Route exact path={`/`} component={() => <div className=\"App\">i want get random width when refresh</div>}></Route>\n          <Route exact path={`/useHoudini`} component={() => <HoudiniHome></HoudiniHome>}></Route>\n          <Route exact path={`/propertyValye`} component={() => <PropertyValue />}></Route>\n          <Route exact path={`/paint`} component={() => <PaintApi></PaintApi>}></Route>\n          <Route exact path={`/layout`} component={() => <LayoutApi></LayoutApi>}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","\n/**\n * 1、获取所有style标签的文本\n * 2、对于外链样式，使用fetch请求到\n */\n\nconst getPageStyles = () => {\n\n  var styleElements =\n      [...document.querySelectorAll('style, link[rel=\"stylesheet\"]')];\n\n  return Promise.all(styleElements.map((el) => {\n    if (el.href) {\n      return fetch(el.href).then((response) => response.text());\n    } else {\n      return el.innerHTML;\n    }\n  })).then((stylesArray) => {\n    return stylesArray.join('\\n')\n  });\n}\n\nexport default getPageStyles","import postcss from 'postcss'\n\n// 定义一个修改 ast 的插件\nconst randomKeywordPlugin = postcss.plugin('random-keyword', () => {\n  return (css) => {\n    css.walkRules((rule) => {\n      rule.walkDecls((decl, i) => {\n        if (decl.value.includes('random')) {\n          decl.value = decl.value.replace('random', Math.random());\n        }\n      });\n    });\n  };\n});\n\nexport default randomKeywordPlugin","/**\n * 1、获取页面所有的样式文件\n * 2、移除所有的获取的样式标签\n * 3、创建style标签，并将css文本填充进去\n * 4、添加新创建的style标签\n */\n\nconst replacePageStyles = (css) => {\n  const existingStyles =\n      [...document.querySelectorAll('style, link[rel=\"stylesheet\"]')];\n\n  const polyfillStyles = document.createElement('style');\n  polyfillStyles.innerHTML = css;\n  document.head.appendChild(polyfillStyles);\n\n  existingStyles.forEach((el) => el.parentElement.removeChild(el));\n};\n\nexport default replacePageStyles","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport postcss from 'postcss'\nimport ss from './gainStyle/ss.js'\nimport getPageStyles from './gainStyle/getPageStyle'\nimport randomKeywordPlugin from './postCss/randomKeywordPlugin.js'\nimport replacePageStyles from './replaceStyle/replacePageStyles.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// 使用styleSheet的方式修改\nss()\n\n/**\n * 1、getPageStyles 获取sytle 标签和外链样式的所有样式文本\n * 2、使用 postcss 解析 样式文本为 抽象语法树 可以理解为我们自己版本的 CSSOM。\n */\ngetPageStyles()\n.then((css) => postcss.parse(css))\n.then((ast) => {\n  // 在这里可以把 ast 打印出来看看\n  console.log(ast)\n});\n\n/**\n * 解析css > ast > 替换 > 转css\n */\ngetPageStyles()\n.then((css) => postcss([randomKeywordPlugin]).process(css)\n.then((result) => {\n  // 打印出来发现值已经被改变了\n  console.log(result.css, 'result');\n  // console.log(result.css, 'result');\n}))\n\n/**\n * 解析css > ast > 替换 > 转css > 替换\n */\ngetPageStyles()\n.then((css) => postcss([randomKeywordPlugin])\n.process(css)\n.then((result) => {\n  replacePageStyles(result.css)\n}))\n\n/**\n * 带来的问题：\n * \n * 一、待解决的问题：\n * 1、对于内联样式、隐藏元素无法覆盖到，本例只列举了style标签及link\n * 2、未考虑css选择器优先级规则(比如important)，这会增加parser复杂度\n * \n * 二、无法避免的问\n * 1、复杂度，为了兼容一个属性，需要大量的额外代码支持\n * 2、性能，对于会频繁触发的操作(比如页面滚动、缩放等)，position: sticky这类polyfill会被频繁触发，删除样式 > 插入样式 > 页面重绘制 >降低页面流畅度\n * 3、不稳定，随着复杂度增加，导致错误增加\n */\n\n/**\n * property value api 主要作用\n * 1、原生支持自定义属性，不需要额外的hack写法\n * 2、动态控制某个css属性值，实现自定义效果\n * 3、也可使用js控制自定义属性\n * \n * 参考\n * https://developer.mozilla.org/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide\n * http://www.danielcwilson.com/blog/2018/02/houdini-quickstart/\n */\n\n /**\n * paint api 主要作用\n * 1、引入canva，可解决原生css无法解决的问题，减少使用不必要的元素\n * 2、相同的效果可复用\n * 3、发挥canvas威力，制作一些不规则图形\n * 4、write js in css\n * \n * 该属性主要作用于 background-image、mask-image、border-image\n * \n * 参考\n * https://www.w3cplus.com/css/css-paint-api.html\n * https://developer.mozilla.org/en-US/docs/Web/API/CSS_Painting_API\n */\n\n  /**\n * layout api 主要作用\n * 1、主要作用于 display 属性\n * 2、效果可复用\n * 3、发挥canvas威力，制作一些不规则图形\n * 4、write js in css\n * \n * 参考\n * https://www.w3cplus.com/css/css-houdini.html\n * https://googlechromelabs.github.io/houdini-samples/\n */\n\n // chrome://flags/#enable-experimental-web-platform-features\n\n /**\n  * 参考\n  * https://github.com/GoogleChromeLabs/houdini-samples\n  * https://googlechromelabs.github.io/houdini-samples/\n  * \n  */","/**\n * 使用 document.styleSheets 获取CSSOM，\n * 但是发现并不能获取到 random， 因为浏览器对于不认识的属性会直接忽略掉，所以这里的通过 cssom 修改属性基本无效\n */\nexport default function ss () {\n  for (const stylesheet of document.styleSheets) {\n    console.log(stylesheet, 'stylesheet')\n    // 展开嵌套的规则（如@media块）到一个单独的数组\n    const rules = [...stylesheet.rules].reduce((prev, next) => {\n      return prev.concat(next.cssRules ? [...next.cssRules] : [next]);\n    }, []);\n    // 遍历每个展开的规则，并且替换random为一个随机数字\n    for (const rule of rules) {\n      for (const property of Object.keys(rule.style)) {\n        const value = rule.style[property];\n        // console.log(value, 99999)\n        if (value.includes('random')) {\n          rule.style[property] = value.replace('random', Math.random());\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}